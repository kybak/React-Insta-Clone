{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/kyle/projects/lambda-school/React-Insta-Clone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/kyle/projects/lambda-school/React-Insta-Clone/src/components/PostContainer/PostContainer.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    background: url(\", \");\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n    height: 500px;\\n    width: 600px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    background: url(\", \");\\n    background-size: contain;\\n    background-repeat: no-repeat;\\n    width: 25px;\\n    height: 25px;\\n    border-radius: 50%;\\n    margin: 0 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: white;\\n    border-radius: 6px;\\n    box-shadow: 1px 1px 5px #00000024;\\n    margin: 20px 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlexRow, FlexColumn } from \"../Elements/Flex\";\nimport styled from 'styled-components';\nimport CommentSection from '../CommentSection/CommentSection';\nvar Post = styled(FlexColumn)(_templateObject());\nvar Logo = styled.div.attrs({\n  url: function url(props) {\n    return props.url;\n  }\n})(_templateObject2(), function (props) {\n  return props.url;\n});\nvar Img = styled.div.attrs({\n  url: function url(props) {\n    return props.url;\n  }\n})(_templateObject3(), function (props) {\n  return props.url;\n});\n\nvar PostContainer = function PostContainer(props) {\n  var post = props.post;\n  return React.createElement(Post, {\n    alignCenter: true,\n    justifyBetween: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FlexRow, {\n    alignCenter: true,\n    height: \"60px\",\n    width: \"full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    url: post.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, post.username)), React.createElement(FlexRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Img, {\n    url: post.imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(CommentSection, {\n    likes: post.likes,\n    comments: post.comments,\n    timestamp: post.timestamp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nPostContainer.propTypes = {\n  post: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    thumbnailUrl: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    likes: PropTypes.number.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    comments: PropTypes.array.isRequired\n  })\n};\nexport default PostContainer;","map":{"version":3,"sources":["/home/kyle/projects/lambda-school/React-Insta-Clone/src/components/PostContainer/PostContainer.js"],"names":["React","PropTypes","FlexRow","FlexColumn","styled","CommentSection","Post","Logo","div","attrs","url","props","Img","PostContainer","post","thumbnailUrl","username","imageUrl","likes","comments","timestamp","propTypes","shape","string","isRequired","number","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,IAAMC,IAAI,GAAGF,MAAM,CAACD,UAAD,CAAT,mBAAV;AAOA,IAAMI,IAAI,GAAGH,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiB;AAC1BC,EAAAA,GAAG,EAAE,aAAAC,KAAK;AAAA,WAAIA,KAAK,CAACD,GAAV;AAAA;AADgB,CAAjB,CAAH,qBAGY,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACD,GAAV;AAAA,CAHjB,CAAV;AAYA,IAAME,GAAG,GAAGR,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiB;AACzBC,EAAAA,GAAG,EAAE,aAAAC,KAAK;AAAA,WAAIA,KAAK,CAACD,GAAV;AAAA;AADe,CAAjB,CAAH,qBAGa,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACD,GAAV;AAAA,CAHlB,CAAT;;AAUA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,KAAK,EAAI;AAAA,MACpBG,IADoB,GACZH,KADY,CACpBG,IADoB;AAE3B,SACI,oBAAC,IAAD;AAAM,IAAA,WAAW,MAAjB;AAAkB,IAAA,cAAc,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,WAAW,MAApB;AAAqB,IAAA,MAAM,EAAC,MAA5B;AAAmC,IAAA,KAAK,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,QAAT,CAFJ,CADJ,EAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,EAUI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEH,IAAI,CAACI,KAA5B;AAAmC,IAAA,QAAQ,EAAEJ,IAAI,CAACK,QAAlD;AAA4D,IAAA,SAAS,EAAEL,IAAI,CAACM,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAcH,CAhBD;;AAmBAP,aAAa,CAACQ,SAAd,GAA0B;AACtBP,EAAAA,IAAI,EAAEb,SAAS,CAACqB,KAAV,CAAgB;AAClBN,IAAAA,QAAQ,EAAEf,SAAS,CAACsB,MAAV,CAAiBC,UADT;AAElBT,IAAAA,YAAY,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UAFb;AAGlBP,IAAAA,QAAQ,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UAHT;AAIlBN,IAAAA,KAAK,EAAEjB,SAAS,CAACwB,MAAV,CAAiBD,UAJN;AAKlBJ,IAAAA,SAAS,EAAEnB,SAAS,CAACsB,MAAV,CAAiBC,UALV;AAMlBL,IAAAA,QAAQ,EAAElB,SAAS,CAACyB,KAAV,CAAgBF;AANR,GAAhB;AADgB,CAA1B;AAYA,eAAeX,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FlexRow, FlexColumn} from \"../Elements/Flex\";\nimport styled from 'styled-components'\nimport CommentSection from '../CommentSection/CommentSection'\n\nconst Post = styled(FlexColumn)`\n    background: white;\n    border-radius: 6px;\n    box-shadow: 1px 1px 5px #00000024;\n    margin: 20px 0;\n`;\n\nconst Logo = styled.div.attrs({\n    url: props => props.url\n})`\n    background: url(${props => props.url});\n    background-size: contain;\n    background-repeat: no-repeat;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    margin: 0 10px;\n`;\n\nconst Img = styled.div.attrs({\n    url: props => props.url\n})`\n    background: url(${props => props.url});\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 500px;\n    width: 600px;\n`;\n\nconst PostContainer = props => {\n    const {post} = props;\n    return (\n        <Post alignCenter justifyBetween>\n            <FlexRow alignCenter height=\"60px\" width=\"full\">\n                <Logo url={post.thumbnailUrl}/>\n                <b>{post.username}</b>\n            </FlexRow>\n\n            <FlexRow>\n                <Img url={post.imageUrl}/>\n            </FlexRow>\n\n            <CommentSection likes={post.likes} comments={post.comments} timestamp={post.timestamp}/>\n        </Post>\n    );\n};\n\n\nPostContainer.propTypes = {\n    post: PropTypes.shape({\n        username: PropTypes.string.isRequired,\n        thumbnailUrl: PropTypes.string.isRequired,\n        imageUrl: PropTypes.string.isRequired,\n        likes: PropTypes.number.isRequired,\n        timestamp: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n    }),\n}\n\n\nexport default PostContainer;\n"]},"metadata":{},"sourceType":"module"}